{% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}
{%- unless product.has_only_default_variant -%}
  <variant-selects
    id="variant-selects-{{ section.id }}"
    data-section="{{ section.id }}"
    {{ block.shopify_attributes }}
  >
    {% comment %} Display dimensions and weight for the currently selected variant {% endcomment %}
    <div class="product-dimensions-container" data-variant-dimensions>
      <p class="product-dimensions">
        <span class="dimensions-label">Dimensions: </span>
        <span class="dimensions-values">
          <span data-length>{{ product.selected_or_first_available_variant.metafields.custom.length.value | default: 'N/A' }}</span> x 
          <span data-width>{{ product.selected_or_first_available_variant.metafields.custom.width.value | default: 'N/A' }}</span> x 
          <span data-height>{{ product.selected_or_first_available_variant.metafields.custom.height.value | default: 'N/A' }}</span>
        </span>
        <span class="weight-label">Weight: </span>
        <span class="weight-value" data-weight>{{ product.selected_or_first_available_variant.weight | weight_with_unit | default: 'N/A' }}</span>
      </p>
    </div>

    {%- for option in product.options_with_values -%}
      {%- liquid
        assign swatch_count = option.values | map: 'swatch' | compact | size
        assign picker_type = 'dropdown' 
        
        if option.name == 'Size' or option.name == 'size'
          assign picker_type = 'dropdown'
        else
          assign picker_type = block.settings.picker_type
        endif

        if swatch_count > 0 and block.settings.swatch_shape != 'none'
          if picker_type == 'dropdown'
            assign picker_type = 'swatch_dropdown'
          else
            assign picker_type = 'swatch'
          endif
        endif
      -%}
      {%- if picker_type == 'swatch' -%}
        <fieldset class="js product-form__input product-form__input--swatch">
          <legend class="form__label">
            {{ option.name }}:
            <span data-selected-value>
              {{- option.selected_value -}}
            </span>
          </legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- elsif picker_type == 'button' and option.name != 'Size' and option.name != 'size' -%}
        <fieldset class="js product-form__input product-form__input--pill">
          <legend class="form__label">{{ option.name }}</legend>
          {% render 'product-variant-options',
            product: product,
            option: option,
            block: block,
            picker_type: picker_type
          %}
        </fieldset>
      {%- else -%}
        <div class="product-form__input product-form__input--dropdown">
          <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
            {{ option.name }}
          </label>
          <div class="select">
            {%- if picker_type == 'swatch_dropdown' -%}
              <span
                data-selected-value
                class="dropdown-swatch"
              >
                {% render 'swatch', swatch: option.selected_value.swatch, shape: block.settings.swatch_shape %}
              </span>
            {%- endif -%}
            <select
              id="Option-{{ section.id }}-{{ forloop.index0 }}"
              class="select__select"
              name="options[{{ option.name | escape }}]"
              form="{{ product_form_id }}"
            >
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: picker_type
              %}
            </select>
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}

    <script type="application/json" data-selected-variant>
      {{ product.selected_or_first_available_variant | json }}
    </script>
    
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const variantSelects = document.querySelectorAll('variant-selects select');
        variantSelects.forEach(select => {
          select.addEventListener('change', function() {
            // Give time for the variant-selects element to update its data
            setTimeout(updateDimensions, 100);
          });
        });
        
        function updateDimensions() {
          const variantSelectsElement = document.querySelector('variant-selects');
          if (!variantSelectsElement) return;
          
          // Get the selected variant data from the data-selected-variant element
          const selectedVariantJson = variantSelectsElement.querySelector('[data-selected-variant]');
          if (!selectedVariantJson) return;
          
          try {
            const selectedVariant = JSON.parse(selectedVariantJson.textContent);
            
            // Update dimensions and weight
            const lengthElement = document.querySelector('[data-length]');
            const widthElement = document.querySelector('[data-width]');
            const heightElement = document.querySelector('[data-height]');
            const weightElement = document.querySelector('[data-weight]');
            
            if (lengthElement && selectedVariant.metafields && selectedVariant.metafields.custom && selectedVariant.metafields.custom.length) {
              lengthElement.textContent = selectedVariant.metafields.custom.length.value || 'N/A';
            }
            
            if (widthElement && selectedVariant.metafields && selectedVariant.metafields.custom && selectedVariant.metafields.custom.width) {
              widthElement.textContent = selectedVariant.metafields.custom.width.value || 'N/A';
            }
            
            if (heightElement && selectedVariant.metafields && selectedVariant.metafields.custom && selectedVariant.metafields.custom.height) {
              heightElement.textContent = selectedVariant.metafields.custom.height.value || 'N/A';
            }
            
            if (weightElement && selectedVariant.weight) {
              weightElement.textContent = (selectedVariant.weight_unit ? selectedVariant.weight + ' ' + selectedVariant.weight_unit : selectedVariant.weight + ' g') || 'N/A';
            }
          } catch (e) {
            console.error('Error updating dimensions:', e);
          }
        }
        
        // Initial update
        updateDimensions();
      });
    </script>
  </variant-selects>
{%- endunless -%}
